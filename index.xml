<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>uname Linux</title>
    <link>https://unamelinux.com/</link>
    <description>Recent content on uname Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://unamelinux.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Packaging</title>
      <link>https://unamelinux.com/posts/python-packaging/</link>
      <pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/python-packaging/</guid>
      <description>Where to start? With the holidays fast approaching, I thought I would dedicate a blog post to packaging, specifically Python packaging. I&amp;rsquo;ll go ahead and say it, packaging Python projects is confusing. If we go to the official Python documentation and take a look at the Distributing Python Modules section we get the following information about these projects:
 Distutils - Added to the Python standard library in 1998. The direct use of Distutils is currently being phased out.</description>
    </item>
    
    <item>
      <title>alias docker=podman</title>
      <link>https://unamelinux.com/posts/podman/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/podman/</guid>
      <description>I&amp;rsquo;ve messed around with Podman every now and then and watched it&amp;rsquo;s development over the last few years, but haven&amp;rsquo;t used it extensively. With Podman&amp;rsquo;s release of version 2.1.0, I thought it would be a great time to explore the project further.
  Podman is an open-source daemonless container engine alternative to Docker. We could simply substitute podman in for docker:
$ alias docker=podman However, Podman also has a number of features that set it a part from Docker.</description>
    </item>
    
    <item>
      <title>Gunicorn and Flask</title>
      <link>https://unamelinux.com/posts/gunicorn/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/gunicorn/</guid>
      <description>Web applications seem to be everywhere nowadays. Python is my go to programming language and so I thought I would build a web application using Flask, a lightweight WSGI web application framework. Starting out with Flask is simple enough, but if you want advanced features such as database integration or user logins, then you will either have to build them yourself or rely on the rich Flask extension community.
I recently finished CS50: Introduction to Computer Science class on edX.</description>
    </item>
    
    <item>
      <title>Reverse Proxies</title>
      <link>https://unamelinux.com/posts/reverse-proxy/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/reverse-proxy/</guid>
      <description>A reverse proxy is a server application that sits in front of one or more web servers and forwards client requests to those web servers. Reverse proxies can be used for (but are not limited to):
 offloading web server TLS encryption reducing server loads by caching static and dynamic content optimizing web content with compression adding basic HTTP access authentication to web servers allowing traffic to multiple web servers though a single IP address  For this post I will set up a reverse proxy on an Ubuntu 20.</description>
    </item>
    
    <item>
      <title>OpenSSL</title>
      <link>https://unamelinux.com/posts/openssl/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/openssl/</guid>
      <description>OpenSSL is a wide spread open source cryptographic software library that contains implementations of the Transport Layer Security (TLS) and Secure Sockets Layer (SSL) protocols. Today most open source security applications utilize OpenSSL.
Hypertext Transfer Protocol Secure (HTTPS) is encrypted using TLS or its predecessor SSL. Encryption of HTTP traffic helps protect against man-in-the-middle and eavesdropping attacks and is a powerful security tool for deploying applications, even those that never see public access.</description>
    </item>
    
    <item>
      <title>WireGuard</title>
      <link>https://unamelinux.com/posts/wireguard/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/wireguard/</guid>
      <description>Organizations spanning more than one site often use Virtual Private Networks (VPNs) to protect sensitive data sent from site to site. VPNs allow private networks to be extended across a public network. Most software VPN implementations utilize encryption to further protect data in transit.
Two of the most common VPNs, IPsec and OpenVPN, are long established and feature rich, but often difficult to set up and deploy. A while ago I attempted to set up a IPsec VPN on my home pfSense firewall, but gave up because of the complex authentication setup required.</description>
    </item>
    
    <item>
      <title>LXC and LXD</title>
      <link>https://unamelinux.com/posts/lxc-and-lxd/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/lxc-and-lxd/</guid>
      <description>Continuing the container series naturally brings us to LXC and LXD. For a background on Linux Containers and an introduction to Docker, see Linux Containers and Docker. The rest of the container series posts can be found here.
 LXC   Engineers from IMB developed LXC in 2008. LXC layered userspace tooling on top of the already existing cgroups and namespace technologies. While LXC improved the user experience of deploying containers, security remained an obstacle with the threat of users being able to break out of containers and attack the host system.</description>
    </item>
    
    <item>
      <title>Docker Build</title>
      <link>https://unamelinux.com/posts/docker-build/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/docker-build/</guid>
      <description>If you need a refresher here are the first two posts in the series, Linux Containers and Docker and Docker Compose and Volumes.
Before moving on to other Linux container platforms, I&amp;rsquo;d like to focus on one more Docker command, docker build. Sometimes it&amp;rsquo;s helpful to slightly alter existing images, or create entirely new images not available on the Docker Hub. Building images is relatively straight forward once you get a feel for the syntax of Docker images.</description>
    </item>
    
    <item>
      <title>Docker Compose and Volumes</title>
      <link>https://unamelinux.com/posts/docker-compose/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/docker-compose/</guid>
      <description>In the first post of the container series Linux Containers and Docker, I introduced Linux Containers and Docker, as well as how to use the Docker CLI and basic management of containers. In this second post of the series I turn my focus to my favorite Docker management tool, Docker Compose.
  Docker Compose is a container management tool for Docker, written in Python, and it is a game changer.</description>
    </item>
    
    <item>
      <title>Linux Containers and Docker</title>
      <link>https://unamelinux.com/posts/docker/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/docker/</guid>
      <description>Containers have radically changed how computer systems and applications are built, managed, and deployed. At home I deploy a combination of containers and VMs for my own personal use.
 Building Blocks While similar to virtualization, containers have several key differences. Each virtual machine created by a hypervisor has its own kernel and emulated hardware. Containers share the same kernel as the host and isolate application processes from the rest of the system.</description>
    </item>
    
    <item>
      <title>XPS 13 Tweaks</title>
      <link>https://unamelinux.com/posts/xps13tweaks/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/xps13tweaks/</guid>
      <description>I&amp;rsquo;ve had my Dell XPS 13 for about six months now and thought I&amp;rsquo;d write a quick review and summarize some of the tweaks I&amp;rsquo;ve made over time. In August 2019 I purchased a Developer Edition Dell XPS 13 9380 which came with Dell&amp;rsquo;s version of Ubuntu pre-installed. Preferring Canonical&amp;rsquo;s stock version of Ubuntu, the first thing I did was install Ubuntu 19.04 on the new laptop.
The screen of the XPS 13 is fantastic with great color and clarity.</description>
    </item>
    
    <item>
      <title>Simple Samba</title>
      <link>https://unamelinux.com/posts/samba/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/samba/</guid>
      <description>As a first post I thought I would tackle a topic I initially avoided for quite a while, Samba. Setting up a Samba server can be incredibly simple and is a great first step to setting up your own personal cloud at home.
Sharing files via Samba allows me to go from my desktop to my laptop without skipping a beat. I can also feel at ease because my sensitive files are password protected and remain solely on the LAN.</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://unamelinux.com/privacy/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/privacy/</guid>
      <description>This website does not contain any trackers or cookies.
No personally identifiable information is collected on this site.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://unamelinux.com/license/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/license/</guid>
      <description>Copyright 2020 Peter Buffon
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://unamelinux.com/about/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/about/</guid>
      <description>I am an aspiring sys admin, coder, and Linux enthusiast.
Over the past five years or so I&amp;rsquo;ve become increasingly interested in computers. It all started with a long time dream of building my own computer, which I accomplished in 2014. I grew up with Macs, but I began to have an itch to tinker and I found myself installing Ubuntu on my new desktop rig. This path eventually led to installing Arch, but nowadays I find myself going back and forth between Fedora and Ubuntu.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://unamelinux.com/contact/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/contact/</guid>
      <description>If you have any questions, comments, or just want to reach out feel free to contact me via Twitter or Telegram.</description>
    </item>
    
    <item>
      <title>Theme</title>
      <link>https://unamelinux.com/theme/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/theme/</guid>
      <description>The blog was generated using Hugo and is hosted on GitHub Pages using Cloudflare for DNS. I developed the theme myself using HTML, CSS, and a bit of Golang to piece everything together.
The design of the blog itself was an experiment to create a static website using HTML and CSS. I&amp;rsquo;m going for simplicity and speed here with the potential for further experimentation in the future.
Right now the Hugo theme code for this site is fairly specific (and a little messy), but I do plan on simplifying and generalizing it in the future so I can release it as a theme on themes.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://unamelinux.com/posts/restic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://unamelinux.com/posts/restic/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
